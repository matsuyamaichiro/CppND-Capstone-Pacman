#include "maze.h"
#include <iostream>

constexpr int w = 28;
constexpr int h = 30;
constexpr char init_maze[h][w] = {
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,
    0,3,0,0,0,0,3,0,0,0,0,0,3,0,0,3,0,0,0,0,0,3,0,0,0,0,3,0,
    0,4,0,0,0,0,3,0,0,0,0,0,3,0,0,3,0,0,0,0,0,3,0,0,0,0,4,0,
    0,3,0,0,0,0,3,0,0,0,0,0,3,0,0,3,0,0,0,0,0,3,0,0,0,0,3,0,
    0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,
    0,3,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,3,0,
    0,3,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,3,0,
    0,3,3,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,3,3,0,
    0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,
    0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,
    0,0,0,0,0,0,3,0,0,1,1,1,1,1,1,1,1,1,1,0,0,3,0,0,0,0,0,0,
    0,0,0,0,0,0,3,0,0,1,0,0,0,2,2,0,0,0,1,0,0,3,0,0,0,0,0,0,
    0,0,0,0,0,0,3,0,0,1,0,1,1,1,1,1,1,0,1,0,0,3,0,0,0,0,0,0,
    1,1,1,1,1,1,3,1,1,1,0,1,1,1,1,1,1,0,1,1,1,3,1,1,1,1,1,1,
    0,0,0,0,0,0,3,0,0,1,0,1,1,1,1,1,1,0,1,0,0,3,0,0,0,0,0,0,
    0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,0,0,
    0,0,0,0,0,0,3,0,0,1,1,1,1,1,1,1,1,1,1,0,0,3,0,0,0,0,0,0,
    0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,0,0,
    0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,0,0,
    0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,
    0,3,0,0,0,0,3,0,0,0,0,0,3,0,0,3,0,0,0,0,0,3,0,0,0,0,3,0,
    0,3,0,0,0,0,3,0,0,0,0,0,3,0,0,3,0,0,0,0,0,3,0,0,0,0,3,0,
    0,4,3,3,0,0,3,3,3,3,3,3,3,1,1,3,3,3,3,3,3,3,0,0,3,3,4,0,
    0,0,0,3,0,0,3,0,0,3,0,0,0,0,0,0,0,0,3,0,0,3,0,0,3,0,0,0,
    0,0,0,3,0,0,3,0,0,3,0,0,0,0,0,0,0,0,3,0,0,3,0,0,3,0,0,0,
    0,3,3,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,3,3,0,
    0,3,0,0,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,3,0,
    0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
};

constexpr Maze::PosType code[] = {
    Maze::PosType::kWall,
    Maze::PosType::kBlank,
    Maze::PosType::kGate,
    Maze::PosType::kFood,
    Maze::PosType::kPowFood
};

void Maze::generateMaze() {
    _w = w;
    _h = h;
    _maze.resize(h);
    for (int j = 0; j < h; j++) {
        _maze[j].resize(w);
    }
    for (int j = 0; j < h; j ++) {
        for (int i = 0; i < w; i++) {
            int k = init_maze[j][i];
            if (k < sizeof(code)/sizeof(Maze::PosType)) {
                _maze[j][i] = code[k];
            } else {
                _maze[j][i] = Maze::PosType::kWall;
            }
            std::cout << k;
        }
        std::cout << std::endl;
    }
}

int Maze::getW() const {
    return _w;
}

int Maze::getH() const {
    return _h;
}

Maze::PosType Maze::getPosType(int x, int y) const {
    return _maze[y][x];
}